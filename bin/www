#!/usr/bin/env node

import app from '../src/app.js';
import database from '#config/database.js';
import config from '#config/config.js';

const startServer = async () => {
	await database.cloud.connect();

	app.listen(config.port, () => {
		console.log(`Listening on port ${config.port}`);
	});
};

/**
 * Gracefully shuts down the application in response to a received signal.
 *
 * @param {string} signal - The signal that triggered the shutdown (e.g. 'SIGINT', 'SIGTERM', etc.)
 * @return {void}
 */
const shutdown = async (signal) => {
	console.log(`Received signal: ${signal}, shutting down the application...`);
	try {
		await database.cloud.disconnect();
		console.log('Disconnected from the database.');
		process.exit(0);
	} catch (error) {
		console.error('Database disconnection error:', error);
		process.exit(1);
	}
};

// Catch the following signals and gracefully shut down the application when they are received.
//
// SIGINT: Generated by Ctrl+C in the terminal.
process.on('SIGINT', () => shutdown('SIGINT'));
// SIGTERM: Sent by the operating system when it wants to terminate the process.
process.on('SIGTERM', () => shutdown('SIGTERM'));
// SIGHUP: Sent by the operating system when the terminal is closed.
process.on('SIGHUP', () => shutdown('SIGHUP'));
// SIGQUIT: Sent by the operating system when the process is being terminated.
process.on('SIGQUIT', () => shutdown('SIGQUIT'));

startServer().catch((error) => {
	console.error('Error starting the server:', error);
	process.exit(1);
});
